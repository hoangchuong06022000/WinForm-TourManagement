//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLTourDuLich
{
    using System;
    using System.Collections.Generic;
    using DAL;
    
    public partial class TOURDULICH
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public TOURDULICH()
        {
            this.CHITIETTOURs = new HashSet<CHITIETTOUR>();
            this.DOANDULICHes = new HashSet<DOANDULICH>();
            this.GIATOURs = new HashSet<GIATOUR>();
        }
    
        public string MATOUR { get; set; }
        public string TENGOI { get; set; }
        public string DACDIEM { get; set; }
        public string MALOAIHINH { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CHITIETTOUR> CHITIETTOURs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DOANDULICH> DOANDULICHes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<GIATOUR> GIATOURs { get; set; }
        public virtual LOAIHINHDULICH LOAIHINHDULICH { get; set; }

        public string TENLOAIHINH
        {
            get { return LOAIHINHDULICH.TENLOAIHINH; }
        }

        public List<TOURDULICH> GetAll()
        {
            return new DAL_Tour().GetAll();
        }

        public bool Insert(TOURDULICH tour)
        {
            return new DAL_Tour().Insert(tour);
        }

        public bool Update(TOURDULICH tourCu, TOURDULICH tourMoi)
        {
            return new DAL_Tour().Update(tourCu, tourMoi);
        }

        public bool Delete(TOURDULICH tour)
        {
            return new DAL_Tour().Delete(tour);
        }
    }
}
